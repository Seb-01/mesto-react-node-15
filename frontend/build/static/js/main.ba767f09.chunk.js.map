{"version":3,"sources":["components/Header/Header.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","utils/Api.js","components/EditProfilePopup/EditProfilePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/AddPlacePopup/AddPlacePopup.js","components/PopupWithoutForm/PopupWithoutForm.js","components/InfoToolTip2/InfoToolTip2.js","components/Form/Form.js","components/Login/Login.js","components/Registration/Registration.js","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","reportWebVitals.js","index.js","images/logo_mesto_header.svg","images/success_pic.svg","images/unsuccess_pic.svg","images/photo_j_i_kusto.jpg"],"names":["Header","props","react_default","a","createElement","className","src","logo","alt","email","react_router","exact","path","type","aria-label","onClick","onSignOut","react_router_dom","to","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","concat","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","link","name","onCardClick","onCardLike","length","Main","Fragment","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","Card_Card","key","Footer","Date","getFullYear","PopupWithForm","isOpen","onSubmit","title","children","buttonSubmitText","onClose","ImagePopup","api","Api","options","Object","classCallCheck","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","_this","request","fetch","method","then","_checkResponse","_this2","newHeaders","jwt","localStorage","getItem","cardId","_this3","cardData","_this4","body","JSON","stringify","profileData","_this5","job","newAvatar","_this6","_this7","_this8","_this9","password","_this10","Accept","Content-Type","_this11","data","token","setItem","_this12","EditProfilePopup","_React$useState","useState","_React$useState2","slicedToArray","setName","_React$useState3","_React$useState4","description","setDescription","handleChange","event","target","value","useEffect","PopupWithForm_PopupWithForm","e","preventDefault","onUpdateUser","id","placeholder","minlenght","maxlenght","required","onChange","EditAvatarPopup","avatarLink","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","PopupWithoutForm","InfoToolTip2","PopupWithoutForm_PopupWithoutForm","successReg","success_pic","unsuccess_pic","Form","Login","setEmail","setPassword","Form_Form","onLogin","Registration","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","handleSubmit","_event$target","setState","defineProperty","onRegister","Component","withRouter","ProtectedRoute","_ref","component","objectWithoutProperties","loggedIn","_useState","_useState2","setCards","_useState3","_useState4","setCurrentUser","_useState5","_useState6","setLoggedIn","_useState7","_useState8","userEmail","setUserEmail","_useState9","_useState10","isSuccessRegLog","setIsSuccessRegLog","handleSuccessRegLog","setPopups","objectSpread","popups","isInfoToolTipOpen","history","useHistory","getUserProfile","userData","console","log","catch","err","getContent","push","checkToken","getInitialCards","_useState11","_useState12","selectedCard","setSelectedCard","_useState13","isEditProfilePopupOpen","isAddPlacePopupOpen","isEditAvatarPopupOpen","_useState14","closeAllPopups","evt","Provider","Header_Header","logoMestoHeader","removeItem","components_ProtectedRoute_ProtectedRoute","changeLikeCardStatus","newCard","c","deleteCard","filter","components_Registration_Registration","register","Login_Login","login","EditProfilePopup_EditProfilePopup","newProfile","saveNewProfile","AddPlacePopup_AddPlacePopup","addCard","toConsumableArray","EditAvatarPopup_EditAvatarPopup","updateAvatar","ImagePopup_ImagePopup","InfoToolTip2_InfoToolTip2","successPic","unsuccessPic","Footer_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App","module","exports","p"],"mappings":"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","file":"static/js/main.ba767f09.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={props.logo} alt=\"Лого Mesto Russia\" />\r\n      <div className=\"header__authorization-place\">\r\n        <p className=\"header__email\">{props.email}</p>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <button\r\n              className=\"header__link-button\"\r\n              type=\"button\"\r\n              aria-label=\"Link button\"\r\n              onClick={props.onSignOut}\r\n            >\r\n              Выйти\r\n            </button>\r\n          </Route>\r\n\r\n          <Route path=\"/sign-up\">\r\n            <Link to=\"/sign-in\" className=\"header__link\">\r\n              Войти\r\n            </Link>\r\n          </Route>\r\n\r\n          <Route path=\"/sign-in\">\r\n            <Link to=\"/sign-up\" className=\"header__link\">\r\n              Регистрация\r\n            </Link>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n// создаем новый объект контекста и эспортируем его\r\n// специальный способ передачи данных одновременно во все компоненты поддерева или даже всего приложения\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n  // подписываемся на контекст CurrentUserContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `elements__trash-button ${\r\n    isOwn ? \"\" : \"elements__trash-button_hidden\"\r\n  }`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `elements__like-button ${\r\n    isLiked ? \"elements__like-button_active\" : \"\"\r\n  }`;\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <article className=\"elements__card\">\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        aria-label=\"Trash button\"\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n      <img\r\n        className=\"elements__photo\"\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        // не забываем добавить обработчик клика на карточке\r\n        onClick={handleClick}\r\n      />\r\n      <div className=\"elements__wrapper\">\r\n        <h2 className=\"elements__title\">{props.card.name}</h2>\r\n        <div className=\"elements__like-zone-wrapper\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            aria-label=\"Like button\"\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <p className=\"elements__likes-number\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\n\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  // подписываемся на контекст CurrentUserContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      {/* -- profile -- */}\r\n      <section className=\"profile\">\r\n        <button\r\n          className=\"profile__edit-avatar-button\"\r\n          type=\"button\"\r\n          aria-label=\"Edit button\"\r\n          onClick={props.onEditAvatar}\r\n        >\r\n          <img\r\n            className=\"profile__avatar\"\r\n            src={currentUser.avatar}\r\n            alt=\"Аватар пользователя\"\r\n          />\r\n        </button>\r\n\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__wrapper\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button\r\n              className=\"profile__edit-button\"\r\n              type=\"button\"\r\n              aria-label=\"Edit button\"\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          aria-label=\"Add button\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n\r\n      {/* elements */}\r\n      <section className=\"elements\">\r\n        {/* карточки отображаем */}\r\n        {props.cards.map((item) => (\r\n          <Card\r\n            key={item._id}\r\n            card={item}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">\r\n        &copy; {new Date().getFullYear()} Mesto Russia\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_target_${props.name} ${\r\n        props.isOpen && \"popup_opened\"\r\n      }`}\r\n    >\r\n      {/* Правильно подставляем имя формы! */}\r\n      {/* edit-avatar (EditAvatar),  edit-profile (EditProfile),  add-place (AddPlace), confirm-delete (ConfirmDelete) */}\r\n\r\n      <div className=\"popup__container\">\r\n        <form\r\n          name={props.name}\r\n          className={`popup__form popup__${props.name}-form`}\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n\r\n          {/* тут будет вложенное содержимое в виде JSX-разметки */}\r\n          {props.children}\r\n\r\n          <button className=\"popup__save-button\" type=\"submit\">\r\n            {props.buttonSubmitText}\r\n          </button>\r\n        </form>\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          aria-label=\"Close button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_target_picture-view ${\r\n        props.card._id && \"popup_opened\"\r\n      }`}\r\n    >\r\n      <div className=\"popup__picture-container\">\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          aria-label=\"Close button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <figure className=\"popup__figure-picture\">\r\n          <img\r\n            className=\"popup__picture\"\r\n            src={props.card.link}\r\n            alt={props.card.name}\r\n          />\r\n          <figcaption className=\"popup__figure-caption\">\r\n            {props.card.name}\r\n          </figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","// import { cohort, token } from \"./utils\";\n\n/** Класс Api, который предоставляет методы для запросов к сервису mesto\n *\n */\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  /** Приватный метод, который проверяет ответ от сервера\n   * @param {object} res - значение, переданное resolve (вызывается при успешном запросе) при создании промиса\n   */\n  _checkResponse(res) {\n    // console.log(`Проверка результат ${res}`);\n    // console.log(`Проверка результат ${res.ok}`);\n    // console.log(JSON.stringify(res));\n\n    if (res.ok) {\n      // Метод json читает ответ от сервера в формате json и возвращает промис для обработки следующим then\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка выполнении запроса к серверу: ${res.status}`);\n  }\n\n  /** Публичный метод для загрузки карточек\n   *\n   */\n  getInitialCards() {\n    const request = this._baseUrl + \"/cards\";\n    // возвращаем промис\n    return (\n      fetch(request, {\n        method: \"GET\",\n        headers: this._headers,\n      })\n        // выполнится, если промис исполнен. Аргумент - функция обработчик успешного выполнения промиса\n        .then((res) => this._checkResponse(res))\n    );\n  }\n\n  /** Публичный метод для загрузки пользовательского профиля\n   *\n   */\n  getUserProfile() {\n    const request = this._baseUrl + \"/users/me\";\n    const newHeaders = this._headers;\n    const jwt = localStorage.getItem(\"jwt\");\n    newHeaders[\"Content-Type\"] = \"application/json\";\n    newHeaders[\"Authorization\"] = `Bearer ${jwt}`;\n\n    return fetch(request, {\n      method: \"GET\",\n      headers: newHeaders,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для удаления карточки\n   * @param {object} formPopup - экземпляр popup с подтверждением удаления карточки\n   */\n  deleteCard(cardId) {\n    const request = this._baseUrl + `/cards/${cardId}`;\n    // удаляем элемент с сервера\n    return fetch(request, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для добавления карточки\n   * @param {object} cardData - данные карточки\n   */\n  addCard(cardData) {\n    const request = this._baseUrl + \"/cards\";\n    const newHeaders = this._headers;\n    newHeaders[\"Content-Type\"] = \"application/json\";\n    // отправляем запрос на добавление карточки\n    return fetch(request, {\n      method: \"POST\",\n      headers: newHeaders,\n      body: JSON.stringify({\n        name: cardData.name,\n        link: cardData.link,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для сохранения данных профиля пользователя\n   * @param {object} profileData - данные карточки\n   */\n  saveNewProfile(profileData) {\n    const request = this._baseUrl + \"/users/me\";\n    const jwt = localStorage.getItem(\"jwt\");\n    const newHeaders = this._headers;\n    newHeaders[\"Content-Type\"] = \"application/json\";\n    newHeaders[\"Authorization\"] = `Bearer ${jwt}`;\n\n    // отправляем запрос\n    return fetch(request, {\n      method: \"PATCH\",\n      headers: newHeaders,\n      body: JSON.stringify({\n        name: profileData.name,\n        about: profileData.job,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для Обновления автара в профиле пользователя\n   * @param {object} newAvatar - ссылка на новый аватар\n   */\n  updateAvatar(newAvatar) {\n    const request = this._baseUrl + \"/users/me/avatar\";\n    const newHeaders = this._headers;\n    newHeaders[\"Content-Type\"] = \"application/json\";\n    // отправляем запрос\n    return fetch(request, {\n      method: \"PATCH\",\n      headers: newHeaders,\n      body: JSON.stringify({\n        avatar: newAvatar.link,\n      }),\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для удаления лайка карточки\n   * @param {object} cardId - id карточки\n   */\n  deleteLike(cardId) {\n    const request = this._baseUrl + `/cards/${cardId}/likes`;\n    // отправляем запрос\n    return fetch(request, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Публичный метод для лайка карточки\n   * @param {object} cardId - id карточки\n   */\n  likeCard(cardId) {\n    const request = this._baseUrl + `/cards/${cardId}/likes`;\n    // отправляем запрос\n    return fetch(request, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** Изменить статус лайка на противоположный))\n   *\n   * @param {*} cardID\n   * @param {*} isLiked\n   */\n  changeLikeCardStatus(cardId, isLiked) {\n    const method = isLiked ? \"DELETE\" : \"PUT\";\n    const request = this._baseUrl + `/cards/${cardId}/likes`;\n    // отправляем запрос\n    return fetch(request, {\n      method: method,\n      headers: this._headers,\n    }).then((res) => this._checkResponse(res));\n  }\n\n  /** создать (зарегистрировать) пользователя\n   *\n   */\n  register(password, email) {\n    const request = this._baseUrl + \"/signup\";\n    // console.log(JSON.stringify({ email, password }));\n\n    return (\n      fetch(request, {\n        method: \"POST\",\n        // headers: this._headers,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\" },\n        // JSON.stringify - для преобразования объекта в JSON\n        body: JSON.stringify({ email, password }),\n      })\n        // выполнится, если промис исполнен. Аргумент - функция обработчик успешного выполнения промиса\n        .then((res) => this._checkResponse(res))\n    );\n  }\n\n  /** авторизация пользователя\n   *\n   */\n  login(password, email) {\n    const request = this._baseUrl + \"/signin\";\n\n    return (\n      fetch(request, {\n        method: \"POST\",\n        // headers: this._headers,\n        headers: { \"Content-Type\": \"application/json\" },\n        // JSON.stringify - для преобразования объекта в JSON\n        body: JSON.stringify({ password, email }),\n      })\n        // выполнится, если промис исполнен. Аргумент - функция обработчик успешного выполнения промиса\n        .then((res) => this._checkResponse(res))\n        .then((data) => {\n          if (data.token) {\n            // сохраняем токен\n            localStorage.setItem(\"jwt\", data.token);\n            return data;\n          } else {\n            return;\n          }\n        })\n    );\n  }\n\n  /** проверка токена\n   *\n   */\n  getContent(token) {\n    const request = this._baseUrl + \"/users/me\";\n    // newHeaders = this._headers;\n    const newHeaders = this._headers;\n    const jwt = localStorage.getItem(\"jwt\");\n    newHeaders[\"Content-Type\"] = \"application/json\";\n    newHeaders[\"Authorization\"] = `Bearer ${jwt}`;\n\n    // console.log(`Токен: ${jwt}`);\n    return (\n      fetch(request, {\n        method: \"GET\",\n        headers: newHeaders,\n      })\n        // выполнится, если промис исполнен. Аргумент - функция обработчик успешного выполнения промиса\n        .then((res) => this._checkResponse(res))\n        .then((data) => {\n          return data;\n        })\n    );\n  }\n}\n\n// Здесь создаем экземпляр класса Api с нужными параметрами, включая токен, и экспортируем этот экземпляр вместо самого класса\n// export const api = new Api({\n//   baseUrl: `https://mesto.nomoreparties.co/v1/${cohort}`,\n//   headers: { authorization: token },\n// });\n\nexport const api = new Api({\n  baseUrl: 'https://api.seb.students.nomoredomains.icu',\n  // baseUrl: 'localhost:3001',\n  // headers: { authorization: token },\n  headers: {\n    'Content-Type':'application/json'\n  },\n});\n\n\n// // Здесь создаем экземпляр класса Api и экспортируем этот экземпляр вместо самого класса\n// export const apiAuth = new Api({\n//   baseUrl: \"https://auth.nomoreparties.co\",\n//   headers: { \"Content-Type\": \"application/json\" },\n// });\n","import React from \"react\";\r\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  // подписываемся на контекст CurrentUserContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // Добавляем стейты, которые привяжем к полям ввода (управляемые компоненты) в форме\r\n  // name\r\n  const [name, setName] = React.useState(currentUser.name);\r\n  // description\r\n  const [description, setDescription] = React.useState(currentUser.about);\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  // Нужно также следить за isOpen (за состоянием открытия), чтобы вставлять в инпуты данные пользователя,\r\n  // иначе, если мы удалим информацию из инпутов и просто закроем попап,\r\n  // то при следующем открытии инпуты будут пустые (без данных пользователя)\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, props.isOpen]);\r\n\r\n  //обработчик изменения input\r\n  function handleChange(event) {\r\n    const target = event.target;\r\n    // обновляем стейты в зависимости от имени поля: name или job\r\n    target.name === \"name\"\r\n      ? setName(target.value)\r\n      : setDescription(target.value);\r\n  }\r\n\r\n  // обработчик Submit формы\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      job: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n      buttonSubmitText=\"Cохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__info\">\r\n        <label className=\"popup__field\">\r\n          <input\r\n            id=\"name-input\"\r\n            type=\"text\"\r\n            className=\"popup__input popup__input_field_name\"\r\n            value={name}\r\n            name=\"name\"\r\n            placeholder=\"Введите имя\"\r\n            minlenght=\"2\"\r\n            maxlenght=\"40\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <span className=\"popup__input-error name-input-error\"></span>\r\n        </label>\r\n        <label className=\"popup__field\">\r\n          <input\r\n            id=\"job-input\"\r\n            type=\"text\"\r\n            className=\"popup__input popup__input_field_job\"\r\n            value={description}\r\n            name=\"job\"\r\n            placeholder=\"Введите род занятий\"\r\n            minlenght=\"2\"\r\n            maxlenght=\"200\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <span className=\"popup__input-error job-input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  // записываем объект, возвращаемый хуком, в переменную\r\n  // этот объект присваиваем элементу input с помощью атрибута ref, чтобы получить доступ к нему и его значению!\r\n  const avatarLink = React.useRef(null);\r\n\r\n  // очищать инпуты нужно при открытии (монтировании)\r\n  // чтобы пользователь мог сразу же еще раз добавить что-то новое\r\n  // и ему не пришлось бы очищать инпуты вручную перед этим\r\n  React.useEffect(() => {\r\n    avatarLink.current.value = \"\";\r\n  }, [props.isOpen]);\r\n\r\n  // обработчик Submit формы\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateAvatar({\r\n      link: avatarLink.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-avatar\"\r\n      title=\"Обновить аватар\"\r\n      buttonSubmitText=\"Cохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__info\">\r\n        <label className=\"popup__field\">\r\n          <input\r\n            id=\"avatar-link-input\"\r\n            className=\"popup__input popup__input_field_link\"\r\n            name=\"link\"\r\n            placeholder=\"Сcылка на аватар\"\r\n            type=\"url\"\r\n            required\r\n            ref={avatarLink}\r\n          />\r\n          <span className=\"popup__input-error avatar-link-input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  // Добавляем стейты, которые привяжем к полям ввода (управляемые компоненты) в форме\r\n  const [name, setName] = React.useState(\"\");\r\n  const [link, setLink] = React.useState(\"\");\r\n\r\n  // очищать инпуты нужно при открытии (монтировании)\r\n  // чтобы пользователь мог сразу же еще раз добавить что-то новое\r\n  // и ему не пришлось бы очищать инпуты вручную перед этим\r\n  React.useEffect(() => {\r\n    setName(\"\");\r\n    setLink(\"\");\r\n  }, [props.isOpen]);\r\n\r\n  //обработчик изменения input\r\n  function handleChange(event) {\r\n    const target = event.target;\r\n    // в поле current React запишет указатель на DOM-элемент, когда будет формировать DOM-дерево\r\n    // обновляем стейты в зависимости от имени поля: name или link\r\n    target.name === \"name\" ? setName(target.value) : setLink(target.value);\r\n  }\r\n\r\n  // обработчик Submit формы\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add-place\"\r\n      title=\"Новое место\"\r\n      buttonSubmitText=\"Cоздать\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__info\">\r\n        <label className=\"popup__field\">\r\n          <input\r\n            id=\"mesto-name-input\"\r\n            type=\"text\"\r\n            className=\"popup__input popup__input_field_mesto-name\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Название\"\r\n            minlenght=\"2\"\r\n            maxlenght=\"30\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <span className=\"popup__input-error mesto-name-input-error\"></span>\r\n        </label>\r\n        <label className=\"popup__field\">\r\n          <input\r\n            id=\"link-input\"\r\n            className=\"popup__input popup__input_field_link\"\r\n            name=\"link\"\r\n            value={link}\r\n            placeholder=\"Сcылка на картинку\"\r\n            type=\"url\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <span className=\"popup__input-error link-input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithoutForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_target_${props.name} ${props.isOpen &&\r\n        \"popup_opened\"}`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        {/* тут будет вложенное содержимое в виде JSX-разметки */}\r\n        {props.children}\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          aria-label=\"Close button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithoutForm;\r\n","import React from \"react\";\r\nimport PopupWithoutForm from \"../PopupWithoutForm/PopupWithoutForm\";\r\n\r\nfunction InfoToolTip2(props) {\r\n  return (\r\n    <PopupWithoutForm isOpen={props.isOpen} onClose={props.onClose}>\r\n      {props.successReg ? (\r\n        <div className=\"popup__success-container\">\r\n          <img\r\n            className=\"popup__success-pic\"\r\n            src={props.success_pic}\r\n            alt=\"Pic success\"\r\n          />\r\n\r\n          <p className=\"popup__exclamation\">\r\n            Вы успешно\r\n            <br />\r\n            зарегистрировались!\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"popup__success-container\">\r\n          <img\r\n            className=\"popup__success-pic\"\r\n            src={props.unsuccess_pic}\r\n            alt=\"Pic unsuccess\"\r\n          />\r\n\r\n          <p className=\"popup__exclamation\">\r\n            Что-то пошло не так!\r\n            <br />\r\n            Попробуйте еще раз.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </PopupWithoutForm>\r\n  );\r\n}\r\n\r\nexport default InfoToolTip2;\r\n","import React from \"react\";\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <div className=\"form__container\">\r\n      <form name={props.name} onSubmit={props.onSubmit}>\r\n        <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n        <fieldset className=\"form__info\">\r\n          <label className=\"form__field\">\r\n            <input\r\n              id=\"email-input\"\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              value={props.email}\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              minlenght=\"2\"\r\n              maxlenght=\"40\"\r\n              required\r\n              onChange={props.onChange}\r\n            />\r\n            <span className=\"popup__input-error name-input-error\"></span>\r\n          </label>\r\n          <label className=\"form__field\">\r\n            <input\r\n              id=\"password-input\"\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              value={props.password}\r\n              name=\"password\"\r\n              placeholder=\"Пароль\"\r\n              minlenght=\"2\"\r\n              maxlenght=\"200\"\r\n              required\r\n              onChange={props.onChange}\r\n            />\r\n            <span className=\"popup__input-error job-input-error\"></span>\r\n          </label>\r\n        </fieldset>\r\n\r\n        <button className=\"form__submit-button\" type=\"submit\">\r\n          {props.buttonSubmitText}\r\n        </button>\r\n      </form>\r\n      {/* тут будет вложенное содержимое в виде JSX-разметки */}\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"../Form/Form\";\r\n\r\nfunction Login(props) {\r\n  // Добавляем стейты, которые привяжем к полям ввода (управляемые компоненты) в форме\r\n  // name\r\n  const [email, setEmail] = React.useState(\"\");\r\n  // description\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  //обработчик изменения input\r\n  function handleChange(event) {\r\n    const target = event.target;\r\n    // обновляем стейты в зависимости от имени поля: email или password\r\n    target.name === \"email\"\r\n      ? setEmail(target.value)\r\n      : setPassword(target.value);\r\n  }\r\n\r\n  // обработчик Submit формы\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    props.onLogin(password, email);\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      name={props.name}\r\n      title={props.title}\r\n      email={email}\r\n      password={password}\r\n      buttonSubmitText={props.buttonSubmitText}\r\n      onSubmit={handleSubmit}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Form from \"../Form/Form\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Registration extends React.Component {\r\n  constructor(props) {\r\n    // Добавляем стейты, которые привяжем к полям ввода (управляемые компоненты) в форме\r\n    super(props);\r\n    this.state = {\r\n      password: \"\",\r\n      email: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //обработчик изменения input\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  // обработчик Submit формы\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onRegister(this.state.password, this.state.email);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form\r\n          name={this.props.name}\r\n          title={this.props.title}\r\n          email={this.state.email}\r\n          password={this.state.password}\r\n          buttonSubmitText={this.props.buttonSubmitText}\r\n          onSubmit={this.handleSubmit}\r\n          onChange={this.handleChange}\r\n        >\r\n          <Link to=\"/sign-in\" className=\"form__login-link\">\r\n            Уже зарегистрированы? Войти\r\n          </Link>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Registration);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport logoMestoHeader from \"../../../src/images/logo_mesto_header.svg\";\r\nimport successPic from \"../../../src/images/success_pic.svg\";\r\nimport unsuccessPic from \"../../../src/images/unsuccess_pic.svg\";\r\n\r\nimport avatar from \"../../../src/images/photo_j_i_kusto.jpg\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../Main/Main\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\n\r\nimport ImagePopup from \"../ImagePopup/ImagePopup\";\r\n\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n//import { api, apiAuth } from \"../../utils/Api\";\r\nimport { api } from \"../../utils/Api\";\r\n\r\nimport EditProfilePopup from \"../EditProfilePopup/EditProfilePopup\";\r\nimport EditAvatarPopup from \"../EditAvatarPopup/EditAvatarPopup\";\r\nimport AddPlacePopup from \"../AddPlacePopup/AddPlacePopup\";\r\nimport InfoToolTip2 from \"../InfoToolTip2/InfoToolTip2\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../Login/Login\";\r\nimport Registration from \"../Registration/Registration\";\r\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  // переменная состояния, отвечающая за стейт данных о карточках\r\n  const [cards, setCards] = useState([]);\r\n\r\n  // данные текущего пользователя\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n    _id: \"\",\r\n  });\r\n\r\n  // стейт-переменная со статусом пользователя - вошел в систему или нет?\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  // стейт-переменная с email пользователя\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  // стейт-переменная с результатом регистрации\r\n  const [isSuccessRegLog, setIsSuccessRegLog] = useState(false);\r\n\r\n  function handleLogin(userEmail) {\r\n    setLoggedIn(true);\r\n    setUserEmail(userEmail);\r\n  }\r\n\r\n  function handleSuccessRegLog(res) {\r\n    if (res) setIsSuccessRegLog(true);\r\n    else setIsSuccessRegLog(false);\r\n    setPopups({\r\n      ...popups, // здесь мы копируем текущее состояние объекта\r\n      isInfoToolTipOpen: true, //здесь перезаписываем свойство isInfoToolTipOpen\r\n    });\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  // разлогон делаем\r\n  function onSignOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    setLoggedIn(false);\r\n    setUserEmail(\"\");\r\n    history.push(\"/sign-in\");\r\n  }\r\n\r\n  // добавляем эффект, вызываемый при монтировании компонента, который будет совершать\r\n  // запрос в API за профилем пользователя\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      api\r\n        .getUserProfile()\r\n        // обрабатываем полученные данные и деструктурируем ответ от сервера, чтобы было понятнее, что пришло\r\n        .then((userData) => {\r\n          // меняем состояние профиля пользователя\r\n          console.log(userData);\r\n          setCurrentUser(userData);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Ошибка при запросе данных пользователя: ${err}!`);\r\n        });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  // Проверка токена\r\n  function checkToken() {\r\n    // если у пользователя есть токен в localStorage,\r\n    // эта функция проверит валидность токена\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    if (jwt) {\r\n      // apiAuth\r\n      api\r\n        .getContent(jwt)\r\n        .then((res) => {\r\n          console.log(jwt);\r\n          console.log(JSON.stringify(res));\r\n          setUserEmail(res.data.email);\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Ошибка при проверке токена: ${err}!`);\r\n        });\r\n    }\r\n  }\r\n\r\n  //\r\n  useEffect(() => {\r\n    checkToken();\r\n  }, [loggedIn]);\r\n\r\n  // обработчик клика на кнопку лайк\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        // теперь нужно эту карточку в нашем стейте найти и проапдейтить. Это вызовет ее перерисовку!\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при обновлении данных карточки: ${err}!`);\r\n      });\r\n  }\r\n\r\n  // обработчик удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API на удаление карточки\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        // теперь нужно эту карточку убрать из нашего стейта. Это вызовет ее перерисовку (удаление из DOM)!\r\n        // создаем копию массива, исключив из него удалённую карточку\r\n        // колбэк обновит существующую коллекцию из стейта — на вход идет значение текущего стейта,\r\n        // на выход — не совершенно новое (ключи!), а обновленное значение (коллекция без удаляемой карточки):\r\n        setCards((cards) => cards.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при удалении карточки: ${err}!`);\r\n      });\r\n  }\r\n\r\n  // добавляем эффект, вызываемый при монтировании компонента, который будет совершать\r\n  // запрос в API за карточками\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      api\r\n        .getInitialCards()\r\n        // обрабатываем полученные данные деструктурируем ответ от сервера, чтобы было понятнее, что пришло\r\n        .then((cards) => {\r\n          // карточки загружаем\r\n          console.log(cards);\r\n          setCards(cards);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Ошибка при запросе карточек: ${err}!`);\r\n        });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  // переменная состояния, отвечающая за полноразмерную картинку\r\n  // {} т.к. ожидаем что здесь будет объект с данными карточки\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  // обработчики нажатия на карточку\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  // переменные состояния, отвечающие за видимость попапов\r\n  const [popups, setPopups] = useState({\r\n    isEditProfilePopupOpen: false,\r\n    isAddPlacePopupOpen: false,\r\n    isEditAvatarPopupOpen: false,\r\n    isInfoToolTipOpen: false,\r\n  });\r\n\r\n  // обработчики нажатия на кнопки\r\n  function handleEditAvatarClick(evt) {\r\n    setPopups({\r\n      ...popups, // здесь мы копируем текущее состояние объекта\r\n      isEditAvatarPopupOpen: true, //здесь перезаписываем свойство isEditAvatarPopupOpen\r\n    });\r\n  }\r\n\r\n  function handleEditProfileClick(evt) {\r\n    setPopups({\r\n      ...popups, // здесь мы копируем текущее состояние объекта\r\n      isEditProfilePopupOpen: true, //здесь перезаписываем свойство isEditProfilePopupOpen\r\n    });\r\n  }\r\n\r\n  function handleAddPlaceClick(evt) {\r\n    setPopups({\r\n      ...popups, // здесь мы копируем текущее состояние объекта\r\n      isAddPlacePopupOpen: true, //здесь перезаписываем свойство isAddPlacePopupOpen\r\n    });\r\n  }\r\n\r\n  // закрытие попапов\r\n  function closeAllPopups(evt) {\r\n    setPopups({\r\n      isEditProfilePopupOpen: false,\r\n      isAddPlacePopupOpen: false,\r\n      isEditAvatarPopupOpen: false,\r\n      isInfoToolTipOpen: false,\r\n    });\r\n\r\n    setSelectedCard({});\r\n  }\r\n\r\n  // обработчик изменения профиля пользователя\r\n  function handleUpdateUser(newProfile) {\r\n    // запрос на сервер: сохранить новые данные пользователя\r\n    api\r\n      .saveNewProfile(newProfile)\r\n      // обрабатываем полученные данные и деструктурируем ответ от сервера, чтобы было понятнее, что пришло\r\n      .then((userData) => {\r\n        // меняем состояние профиля пользователя\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          name: userData.name,\r\n          about: userData.about,\r\n        });\r\n        // закрываем все модальные окна\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при сохранении данных пользователя: ${err}!`);\r\n      });\r\n  }\r\n\r\n  // обработчик изменения аватара пользователя\r\n  function handleUpdateAvatar(newAvatar) {\r\n    // запрос на сервер: сохранить новые данные пользователя\r\n    api\r\n      .updateAvatar(newAvatar)\r\n      // обрабатываем полученные данные и деструктурируем ответ от сервера, чтобы было понятнее, что пришло\r\n      .then((userData) => {\r\n        // меняем состояние профиля пользователя\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          avatar: userData.avatar,\r\n        });\r\n        // закрываем все модальные окна\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при сохранении аватара пользователя: ${err}!`);\r\n      });\r\n  }\r\n\r\n  // обработчик добавления новой карточки\r\n  function handleAddPlaceSubmit(cardData) {\r\n    api\r\n      .addCard(cardData)\r\n      // обновляем стейт cards с помощью расширенной копии текущего массива — используя spred оператор ...\r\n      .then((newCard) => {\r\n        // меняем стейт с набором карточек\r\n        setCards([newCard, ...cards]);\r\n        // закрываем все модальные окна\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при сохранении новой карточки: ${err}!`);\r\n      });\r\n  }\r\n\r\n  // обработчик login submit\r\n  function handleLoginSubmit(password, email) {\r\n    // сюда добавим логику обработки формы логина\r\n    // Отправляем запрос в API регистрацию пользователя\r\n    // apiAuth\r\n    api\r\n      .login(password, email)\r\n      // здесь уже данные пользователя от сервера\r\n      .then((data) => {\r\n        if (data.token) {\r\n          handleLogin(email);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при логине пользователя: ${err}!`);\r\n        handleSuccessRegLog(false);\r\n      });\r\n  }\r\n\r\n  // обработчик registration\r\n  function handleRegisterSubmit(password, email) {\r\n    // сюда добавим логику обработки формы регистрации\r\n    // Отправляем запрос в API регистрацию пользователя\r\n    // apiAuth\r\n    api\r\n      .register(password, email)\r\n      // здесь уже данные пользователя от сервера\r\n      .then((res) => {\r\n        console.log(`Получаю результат registration: ${res}`);\r\n        if (res) {\r\n          history.push(\"/sign-in\");\r\n          handleSuccessRegLog(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка при регистрации пользователя: ${err}!`);\r\n        handleSuccessRegLog(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    // внедряем общий контекст с помощью провайдера со значением стейта currentUser\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div>\r\n        <Header\r\n          logo={logoMestoHeader}\r\n          email={userEmail}\r\n          onSignOut={onSignOut}\r\n          // goToRegister={goToRegister}\r\n        />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            exact\r\n            path=\"/\"\r\n            loggedIn={loggedIn}\r\n            component={Main}\r\n            avatar={avatar}\r\n            name=\"Жак-Ив Кусто\"\r\n            about=\"Исследователь океана\"\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          {/* регистрация пользователей */}\r\n          <Route path=\"/sign-up\">\r\n            <Registration\r\n              name=\"registration\"\r\n              title=\"Регистрация\"\r\n              buttonSubmitText=\"Зарегистрироваться\"\r\n              onRegister={handleRegisterSubmit}\r\n            />\r\n          </Route>\r\n          {/* авторизация пользователей */}\r\n          <Route path=\"/sign-in\">\r\n            <Login\r\n              name=\"login\"\r\n              title=\"Вход\"\r\n              email={userEmail}\r\n              buttonSubmitText=\"Войти\"\r\n              onLogin={handleLoginSubmit}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {/* popups */}\r\n        {/* профиль пользователя */}\r\n        <EditProfilePopup\r\n          isOpen={popups.isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        {/* добавление карточки */}\r\n        <AddPlacePopup\r\n          isOpen={popups.isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        {/* аватар пользователя */}\r\n        <EditAvatarPopup\r\n          isOpen={popups.isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        {/* конфирм удаления карточки */}\r\n        <PopupWithForm\r\n          name=\"confirm-delete\"\r\n          title=\"Вы уверены?\"\r\n          buttonSubmitText=\"Да\"\r\n        />\r\n        {/* показ карточки при клике на нее */}\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n        {/* инфо о результате регистрации */}\r\n        <InfoToolTip2\r\n          isOpen={popups.isInfoToolTipOpen}\r\n          onClose={closeAllPopups}\r\n          successReg={isSuccessRegLog}\r\n          success_pic={successPic}\r\n          unsuccess_pic={unsuccessPic}\r\n        />\r\n\r\n        <Footer />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_mesto_header.51772f7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/success_pic.7fc4c149.svg\";","module.exports = __webpack_public_path__ + \"static/media/unsuccess_pic.c32299fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo_j_i_kusto.0ef4e6b8.jpg\";"],"sourceRoot":""}